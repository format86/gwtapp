/**
 * Sencha GXT 3.1.1 - Sencha for GWT
 * Copyright(c) 2007-2014, Sencha, Inc.
 * licensing@sencha.com
 *
 * http://www.sencha.com/products/gxt/license/
 */
@def borderColor value('theme.tabs.borderColor');
@def bodyBackgroundColor value('theme.tabs.bodyBackgroundColor');
@def lastStopColor value('theme.tabs.lastStopColor');

@def headingTextColor value('theme.tabs.headingText.color');
@def headingTextSize value('theme.tabs.headingText.size');
@def headingTextWeight value('theme.tabs.headingText.weight');
@def headingTextFont value('theme.tabs.headingText.family');

@def activeHeadingTextColor value('theme.tabs.activeHeadingText.color');
@def activeHeadingTextSize value('theme.tabs.activeHeadingText.size');
@def activeHeadingTextWeight value('theme.tabs.activeHeadingText.weight');
@def activeHeadingTextFont value('theme.tabs.activeHeadingText.family');

@def tabLeftPadding value('theme.tabs.padding.left', 'px');
@def tabLeftPaddingIcon value('theme.tabs.paddingWithIcon.left', 'px');/*extra space for icon, default to 16px for icon*/
@def tabRightPadding value('theme.tabs.padding.right', 'px');
@def tabRightPaddingClosable value('theme.tabs.paddingWithClosable.right', 'px');/*extra space for close icon*/

@def tabIconLeftOffset value('theme.tabs.iconLeftOffset', 'px');
@def tabIconTopOffset value('theme.tabs.iconTopOffset', 'px');

@def scrollerWidth value('theme.tabs.scrollerWidth', 'px');

@def tabHeight value('theme.tabs.tabHeight', 'px');
@def tabSpacing value('theme.tabs.tabSpacing', 'px');

@def tabItemBorderLeft value('theme.tabs.tabItemBorderLeft');
@def tabItemBorderTop value('theme.tabs.tabItemBorderTop');
@def tabItemBorderRight value('theme.tabs.tabItemBorderRight');

@def tabStripPaddingTop value('theme.tabs.tabStripPadding.top','px');
@def tabBarBorder value('theme.tabs.tabBarBorder');
@def tabBarBottomHeight value('theme.tabs.tabBarBottomHeight', 'px');
@def tabStripBottomBorder value('theme.tabs.tabStripBottomBorder');
@def tabBodyBorder value('theme.tabs.tabBodyBorder');
@def tabTextPadding value('theme.tabs.tabTextPadding.toString');



@sprite .tabRight {
  gwt-image: "tabLeft";
  padding-left: tabLeftPadding;
  /* Override @sprite behavior */
  width: auto;
  height: auto;
}

@sprite .tabLeft {
  gwt-image: "tabRight";
  padding-right: tabRightPadding;
  /* Override @sprite behavior */
  width: auto;
  height: auto;
  background-position: top right;
}

.tabItem {
  height: tabHeight;
  overflow: hidden;
}

.tabItem.tabStripActive {
  overflow: inherit;
}

/* This is already defined in BaseTabPanelStyle, but it is reiterated here to override the rule above */
.tabStripClosable .tabLeft {
  padding-right: tabRightPaddingClosable;
}

@sprite .tabStripOver .tabRight {
  gwt-image: "tabLeftOver";
  /* Override @sprite behavior */
  width: auto;
  height: auto;
}

@sprite .tabStripOver .tabLeft {
  gwt-image: "tabRightOver";
  /* Override @sprite behavior */
  width: auto;
  height: auto;
  background-position: top right;
}

@sprite .tabStripOver .tabStripInner {
  gwt-image: "tabCenterOver";
  /* Override @sprite behavior */
  height: auto;
}

@sprite .tabStripActive .tabRight {
  gwt-image: "tabLeftActive";
  /* Override @sprite behavior */
  width: auto;
  height: auto;
}

@sprite .tabStripActive .tabLeft {
  gwt-image: "tabRightActive";
  /* Override @sprite behavior */
  width: auto;
  height: auto;
  background-position: top right;
}


.tabBar {
  background-color: lastStopColor;
  border: tabBarBorder;
}

@sprite .tabStrip {
  gwt-image: "tabStripBackground";
  background-color: frameBgColor;
  border-bottom: tabStripBottomBorder;
  /* Override @sprite behavior */
  height: auto;
  overflow: visible;
}

.tabStrip .tabStripText {
  font: normal headingTextWeight headingTextSize headingTextFont;
  color: headingTextColor;
}

.tabStripOver .tabStripText {
  font: normal hoverHeadingTextWeight hoverHeadingTextSize hoverHeadingTextFont;
  color: hoverHeadingTextColor;
}

.tabStripActive .tabStripText {
  font: normal activeHeadingTextWeight activeHeadingTextSize activeHeadingTextFont;
  color: activeHeadingTextColor;
}

@sprite .tabStrip .tabStripClosable a.tabStripClose {
  gwt-image: "tabClose";
}

@sprite .tabStrip .tabStripClosable a.tabStripClose:hover {
  gwt-image: "tabClose";
}

.tabBody {
  border: tabBodyBorder;
  background-color: bodyBackgroundColor;
  overflow: hidden;
  border-top: none;
}

.tabScrollerLeft {
  background: transparent no-repeat literal('-')scrollerWidth 0;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-bottom: 1px solid;
  position: absolute;
  left: 0;
  top: 0;
  z-index: 10;
  cursor: pointer;
}

@sprite .tabScrollerLeft {
  gwt-image: "scrollerLeft";
  border-bottom-color: borderColor;
  width: scrollerWidth;
}

@sprite .tabScrollerLeft:after {
  gwt-image: "scrollerLeftArrow";
  width: scrollerWidth;
  height: 100%;
  background-position: center;
  border: none;
  z-index: 10;
  position: absolute;
  content: "";
  left: 0px;
  top: 0px;
}

@sprite .tabScrollerLeftOver {
  gwt-image: "scrollerLeftOver";
}

@sprite .tabScrollerRight {
  gwt-image: "scrollerRight";
  border-bottom-color: borderColor;
  width: scrollerWidth;
}

@sprite .tabScrollerRight:after {
  gwt-image: "scrollerRightArrow";
  width: scrollerWidth;
  height: 100%;
  background-position: center;
  border: none;
  z-index: 10;
  position: absolute;
  content: "";
  left: 0px;
  top: 0px;
}

@sprite .tabScrollerRightOver {
  gwt-image: "scrollerRightOver";
}






.tab {
  overflow: hidden;
}

@if !user.agent ie6 {
/* Don't bother giving rules to browsers that don't support them */
  .tab {
    outline: none;
  }
}

.tabBar {
  overflow: hidden;
}

@if user.agent ie6 {
/* IE6 and IE7 hasLayout workaround */
  .tabBar {
    zoom: 1;
  }
}

.tabBar {
  padding-bottom: tabBarBottomHeight;
}

.tabStripWrap {
  width: 100%;
  overflow: hidden;
  position: relative;
}

@if user.agent ie6 {
/* IE6 and IE7 hasLayout workaround */
  .tabStripWrap {
    zoom: 1;
  }
}

@if !user.agent ie8 {
  .tabStrip {
    display: block;
    /* Make the tab strip much wider than would be reasonably necessary to avoid tab "wrap". Currently allows for about
     * 8600 tabs. */
    width: 1000000px;
  }
} @else {
  .tabStrip {
    display: block;
    /* widths great than this in ie8 causes north / south resize handles to have white background when tab panel put into window */
    width: 65520px;
  }
}

@if user.agent ie6 {
/* IE6 and IE7 hasLayout workaround */
  .tabStrip {
    zoom: 1;
  }
}

.tabStrip {
  padding-top: tabStripPaddingTop;
}

.tabEdge, .tabItem{
  float: left;
  position: relative;
  margin-right: tabSpacing;
}

.tabEdge {
  float: left;
  margin: 0 !important;
  padding: 0 !important;
  border: 0 none !important;
  font-size: 1px !important;
  line-height: 1px !important;
  overflow: hidden;
  background: transparent !important;
  width: 1px;
}

@if user.agent ie6 {
/* IE6 and IE7 hasLayout workaround */
  .tabEdge {
    zoom: 1;
  }
}

.tabStrip a,.tabStrip span,.tabStrip em {
  display: block;
}

.tabStrip a {
  text-decoration: none !important;
  cursor: pointer;
}

@if !user.agent ie6 {
  .tabStrip a {
    outline: none;
  }
}

.tabStripInner {
  overflow: hidden;
  text-overflow: ellipsis;
}

@sprite .tabStrip .tabStripInner {
  gwt-image: "tabCenter";
  height: auto;
  border-top: tabItemBorderTop;
}

@sprite .tabStripOver .tabStripInner {
  gwt-image: "tabCenterOver";
  height: auto;
}

@sprite .tabStripActive .tabStripInner {
  gwt-image: "tabCenterActive";
  /* Override @sprite behavior */
  height: auto;
}

.tabStrip span.tabStripText {
  white-space: nowrap;
  cursor: pointer;
  padding: tabTextPadding;
  height: tabHeight;
}

.tabWithIcon .tabRight {
  /*padding-left: 6px;*/
}

.tabStrip .tabWithIcon span.tabStripText {
  padding-left: 20px;
  background-position: 0 3px;
  background-repeat: no-repeat;
}

.tabStripActive,.tabStripActive a.tabRight {
  cursor: default;
}

.tabStripActive span.tabStripText {
  cursor: default;
}

/*@if user.agent ie6 ie8 ie9 {
  .tabStrip .tabRight {
    position: relative;
  }
}*/

.tabStripActive .tabRight {
  margin-bottom: -1px;
}

.tabStripActive .tabRight span.tabStripText {
  padding-bottom: 5px;
}

.tabStrip .tabStripClose {
  display: none;
}

.tabStripClosable {
  position: relative;
}

.tabStripClosable .tabLeft {
  padding-right: 19px;
}

.tabStrip .tabStripClosable a.tabStripClose {
  background-repeat: no-repeat;
  display: block;
  width: 11px;
  height: 11px;
  position: absolute;
  top: 3px;
  right: 3px;
  cursor: pointer;
  z-index: 2;
}

@if user.agent ie6 ie8 {
  .tabStrip .tabStripClosable a.tabStripClose {
    filter: literal("alpha(opacity=60)");
  }
} @else {
  .tabStrip .tabStripClosable a.tabStripClose {
    opacity: 0.6;
  }
}

.tabStrip .tabStripActive a.tabStripClose {
  opacity: .8;
}

.tabStrip .tabStripClosable a.tabStripClose:hover {
  opacity: 1;
}


.tabScrollerLeftDisabled, .tabScrollerRightDisabled {
  cursor: default;
}

@if user.agent ie6 ie8 {
  .tabScrollerLeftDisabled, .tabScrollerRightDisabled {
    filter: literal("alpha(opacity=50)");
  }
} @else {
  .tabScrollerLeftDisabled, .tabScrollerRightDisabled {
    opacity: .5;
  }
}

.tabScrollerRight {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: scrollerWidth;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 10;
  cursor: pointer;
}

.tabScrolling .tabStripWrap {
  margin-left: scrollerWidth;
  margin-right: scrollerWidth;
}

.tabScrolling {
  position: relative;
}

.tabStrip li .tabImage {
  position: absolute;
}

@if user.agent ie8 {
  .tabStrip li .tabImage {
    top: 4px;
    left: 6px;
  }
} @else {
  .tabStrip li .tabImage {
    top: 3px;
    left: 5px;
  }
}

.tabRight {
  top: 0;
}
