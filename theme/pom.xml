<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>gwtapp</artifactId>
        <groupId>ru.formatq.gwtapp</groupId>
        <version>0.2</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>theme</artifactId>

    <properties>
        <gxt.version>3.1.1</gxt.version>
        <gwt.version>2.6.0</gwt.version>
        <phantomjs.version>1.9.2</phantomjs.version>
        <bin>bin/phantomjs</bin>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.sencha.gxt</groupId>
            <artifactId>gxt-themebuilder</artifactId>
            <version>${gxt.version}</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>generate</id>
            <build>
                <plugins>
                    <!-- First, download the PhantomJS bin that can run locally. See the profiles section for how the right version
                    is selected. If a local version is used instead, this isn't necessary, but each computer that runs this maven
                    script will need a copy of phantom to correctly generate the theme. -->
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>maven-download-plugin</artifactId>
                        <version>1.1.0</version>
                        <executions>
                            <execution>
                                <id>download-phantomjs</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>
                                        https://phantomjs.googlecode.com/files/phantomjs-${phantomjs.version}-${platform}${archive}
                                    </url>
                                    <outputDirectory>${project.build.directory}/phantomjs</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <unpack>true</unpack>
                        </configuration>
                    </plugin>
                    <!-- Run the themer with the PhantomJS bin downloaded above. Generate classes into target/theme-classes. This
                     is done in the generate-sources phase, so that it could be copied to the build path, or in this case
                     src/main/java and compiled from there. -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.1</version>
                        <executions>
                            <execution>
                                <id>generate-theme</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>com.sencha.gxt.themebuilder.ThemeBuilder</mainClass>
                                    <arguments>
                                        <!-- Build all generated sources into the classes directory so we can filter out the sources
                                         and put them in src/main/java -->
                                        <argument>-gen</argument>
                                        <argument>${project.build.directory}/themeclasses</argument>
                                        <!-- These next several arguments are optional, and are here to make it easier to debug issues in the theme -->
                                        <argument>-imageFile</argument>
                                        <argument>${project.build.directory}/snapshot.png</argument>
                                        <argument>-manifestFile</argument>
                                        <argument>${project.build.directory}/snapshot.json</argument>
                                        <argument>-out</argument>
                                        <argument>${project.build.directory}/theme.jar</argument>
                                        <argument>-warDir</argument>
                                        <argument>${project.build.directory}/war</argument>
                                        <!-- List theme config files here -->
                                        <argument>${project.basedir}/green.theme</argument>
                                    </arguments>
                                    <systemProperties>
                                        <systemProperty>
                                            <key>phantomBin</key>
                                            <value>
                                                ${project.build.directory}/phantomjs/phantomjs-${phantomjs.version}-${platform}/${bin}
                                            </value>
                                        </systemProperty>
                                    </systemProperties>
                                    <includePluginDependencies>true</includePluginDependencies>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.sencha.gxt</groupId>
                                <artifactId>gxt-themebuilder</artifactId>
                                <version>${gxt.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-to-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>src/main/java</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/themeclasses</directory>
                                            <excludes>
                                                <exclude>**/*.class</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- These profiles let us pick which version of PhantomJS to download and provide to the themer. This isn't
         required if phantom is on the path already, or if each machine where this build will be run has some way of
         specifying the phantomJS build to be used. -->
        <profile>
            <id>win32</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>windows</platform>
                <bin>phantomjs.exe</bin>
                <archive>.zip</archive>
            </properties>
        </profile>

        <!--<profile>-->
            <!--<id>mac</id>-->
            <!--<activation>-->
                <!--<os>-->
                    <!--<family>mac</family>-->
                <!--</os>-->
            <!--</activation>-->
            <!--<properties>-->
                <!--<platform>macosx</platform>-->
                <!--<archive>.zip</archive>-->
            <!--</properties>-->
        <!--</profile>-->
        <!--<profile>-->
            <!--<id>linux</id>-->
            <!--<activation>-->
                <!--<os>-->
                    <!--<family>unix</family>-->
                    <!--<name>linux</name>-->
                <!--</os>-->
            <!--</activation>-->
            <!--<properties>-->
                <!--<platform>linux-i686</platform>-->
                <!--<archive>.tar.bz2</archive>-->
            <!--</properties>-->
            <!--<build>-->
                <!--<plugins>-->
                    <!--<plugin>-->
                        <!--<groupId>com.googlecode.maven-download-plugin</groupId>-->
                        <!--<artifactId>maven-download-plugin</artifactId>-->
                        <!--<configuration>-->
                            <!--<unpack>false</unpack>-->
                        <!--</configuration>-->
                    <!--</plugin>-->
                    <!--<plugin>-->
                        <!--<groupId>org.apache.maven.plugins</groupId>-->
                        <!--<artifactId>maven-antrun-plugin</artifactId>-->
                        <!--<version>1.7</version>-->
                        <!--<executions>-->
                            <!--<execution>-->
                                <!--<id>unpack-linux</id>-->
                                <!--<phase>compile</phase>-->
                                <!--<goals>-->
                                    <!--<goal>run</goal>-->
                                <!--</goals>-->
                                <!--<configuration>-->
                                    <!--<failOnError>true</failOnError>-->
                                    <!--<target>-->
                                        <!--<bunzip2-->
                                                <!--src="${project.build.directory}/phantomjs/phantomjs-${phantomjs.version}-${platform}.tar.bz2"/>-->
                                        <!--<untar src="${project.build.directory}/phantomjs/phantomjs-${phantomjs.version}-${platform}.tar"-->
                                               <!--dest="${project.build.directory}/phantomjs/"/>-->
                                    <!--</target>-->
                                <!--</configuration>-->
                            <!--</execution>-->
                        <!--</executions>-->
                    <!--</plugin>-->
                <!--</plugins>-->
            <!--</build>-->
        <!--</profile>-->

        <!--<profile>-->
            <!--<id>lin64</id>-->
            <!--<activation>-->
                <!--<os>-->
                    <!--<family>unix</family>-->
                    <!--<arch>amd64</arch>-->
                    <!--<name>linux</name>-->
                <!--</os>-->
            <!--</activation>-->
            <!--<properties>-->
                <!--<platform>linux-x86_64</platform>-->
            <!--</properties>-->
        <!--</profile>-->
    </profiles>

</project>